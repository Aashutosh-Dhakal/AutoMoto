/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.automoto.view;

/**
 * This class represents the loading screen for the AutoMoto application.
 * It displays a progress bar and a logo during the loading process.
 * After the loading is complete, it opens the main application window.
 * 
 * @author aashutoshdhakal
 */
public class LoadingScreen extends javax.swing.JFrame {

    /**
     * Constructor for LoadingScreen.
     * Initializes the components and starts the loading process.
     */
    public LoadingScreen() {
        initComponents(); 
        loading(); // Loading simulation in initialized at start
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBaseLoadingScreen = new javax.swing.JPanel();
        loadingProgressBar = new javax.swing.JProgressBar();
        iconLoadingScreenBase = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(500, 500));
        setUndecorated(true);

        pnlBaseLoadingScreen.setMaximumSize(new java.awt.Dimension(500, 500));
        pnlBaseLoadingScreen.setMinimumSize(new java.awt.Dimension(500, 500));
        pnlBaseLoadingScreen.setPreferredSize(new java.awt.Dimension(500, 500));
        pnlBaseLoadingScreen.setLayout(null);
        pnlBaseLoadingScreen.add(loadingProgressBar);
        loadingProgressBar.setBounds(30, 420, 440, 30);

        iconLoadingScreenBase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/automoto/resources/Black and Brown Classy and Refined Motorcycle Logo.png"))); // NOI18N
        pnlBaseLoadingScreen.add(iconLoadingScreenBase);
        iconLoadingScreenBase.setBounds(0, 0, 500, 500);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlBaseLoadingScreen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlBaseLoadingScreen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
     
    
    /**
     * Simulates the loading process.
     * Updates the progress bar from 0% to 100%, then opens the main application window.
     */
    
    // Progress Code for Loading Screen
    private void loading() {
        new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    for (int i = 0; i <= 100; i++) {
                        loadingProgressBar.setValue(i); // Updates the progress bar value
                        Thread.sleep(50); // Delays the code by 50ms
                    }
                    
                    new AutoMoto().setVisible(true);
                    
                    dispose();
                    
                } 
                catch (Exception e) {
                    e.printStackTrace(); // Catches the exception if any, and throws exception details
                }
            }
        }).start();
    }
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoadingScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoadingScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoadingScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoadingScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                LoadingScreen loadingScreen = new LoadingScreen();
                loadingScreen.setVisible(true);
            }
            
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel iconLoadingScreenBase;
    private javax.swing.JProgressBar loadingProgressBar;
    private javax.swing.JPanel pnlBaseLoadingScreen;
    // End of variables declaration//GEN-END:variables
}
